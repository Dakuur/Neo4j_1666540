// Create Indexes

CREATE INDEX house_id_index IF NOT EXISTS FOR (n:House) ON (n.id);
CREATE INDEX individual_id_index IF NOT EXISTS FOR (n:Individual) ON (n.id);


// Load Houses

LOAD CSV WITH HEADERS FROM 'https://docs.google.com/spreadsheets/d/e/2PACX-1vT0ZhR6BSO_M72JEmxXKs6GLuOwxm_Oy-0UruLJeX8_R04KAcICuvrwn2OENQhtuvddU5RSJSclHRJf/pub?output=csv' AS row
WITH row, row.Municipi + "_" + row.Any_Padro + "_" + row.Id_Llar AS house_id
MERGE (n:House {id: house_id})
SET n.year_padron = row.Any_Padro,
    n.number = row.Numero,
    n.municipality = row.Municipi,
    n.house_id = row.Id_Llar,
    n.street = row.Carrer;


// Load Individuals

LOAD CSV WITH HEADERS FROM 'https://docs.google.com/spreadsheets/d/e/2PACX-1vTfU6oJBZhmhzzkV_0-avABPzHTdXy8851ySDbn2gq32WwaNmYxfiBtCGJGOZsMgCWjzlEGX4Zh1wqe/pub?output=csv' AS row
MERGE (n:Individual {id: row.Id})
SET n.year = row.Year,
    n.name = row.name,
    n.surname = row.surname,
    n.second_surname = row.second_surname;


// Load Families

LOAD CSV WITH HEADERS FROM 'https://docs.google.com/spreadsheets/d/e/2PACX-1vRVOoMAMoxHiGboTjCIHo2yT30CCWgVHgocGnVJxiCTgyurtmqCfAFahHajobVzwXFLwhqajz1fqA8d/pub?output=csv' AS row
MATCH (n1:Individual {id: row.ID_1}), (n2:Individual {id: row.ID_2})
MERGE (n1)-[f:IS_FAMILY]->(n2)
SET f.relationship = row.Relacio,
    f.harmonized_relationship = row.Relacio_Harmonitzada;


// Load Living

LOAD CSV WITH HEADERS FROM 'https://docs.google.com/spreadsheets/d/e/2PACX-1vRM4DPeqFmv7w6kLH5msNk6_Hdh1wuExRirgysZKO_Q70L21MKBkDISIyjvdm8shVixl5Tcw_5zCfdg/pub?output=csv' AS row
WITH row, row.Location + "_" + row.Year + "_" + row.HOUSE_ID AS house_id
MATCH (n:Individual {id: row.IND}), (h:House {id: house_id})
MERGE (n)-[l:LIVES_IN]->(h)
SET l.lives = row.VIU,
    l.location = row.Location,
    l.year = row.Year;


// Load Same_as

LOAD CSV WITH HEADERS FROM 'https://docs.google.com/spreadsheets/d/e/2PACX-1vTgC8TBmdXhjUOPKJxyiZSpetPYjaRC34gmxHj6H2AWvXTGbg7MLKVdJnwuh5bIeer7WLUi0OigI6wc/pub?output=csv' AS row
MATCH (n1:Individual {id: row.Id_A}), (n2:Individual {id: row.Id_B})
MERGE (n1)-[:SAME_AS]->(n2);
